batch
/subsystem=elytron:add(final-providers="combined-providers",disallowed-providers=["OracleUcrypto"])
/subsystem=elytron/aggregate-providers=combined-providers:add(providers=["elytron","openssl"])
/subsystem=elytron/provider-loader=elytron:add(module="org.wildfly.security.elytron")
/subsystem=elytron/provider-loader=openssl:add(module="org.wildfly.openssl")
run-batch

/subsystem=elytron/provider-http-server-mechanism-factory=global:add
/subsystem=elytron/constant-permission-mapper=constant-permission-mapper:add(permissions=[{"class-name" => "org.wildfly.security.auth.permission.LoginPermission"}])
/subsystem=elytron/simple-permission-mapper=anonymous-permission-mapper:add(permission-mappings=[{"principals" => ["anonymous"],"permissions" => [{"class-name" => "org.wildfly.security.auth.permission.LoginPermission"}]}])
/subsystem=elytron/logical-permission-mapper=default-permission-mapper:add(logical-operation="unless",left="constant-permission-mapper",right="anonymous-permission-mapper")
/subsystem=elytron/identity-realm=local:add(identity="\$local")
/subsystem=elytron/file-audit-log=local-audit:add(path="audit.log",relative-to=$logDir,format="JSON")
/subsystem=elytron/simple-role-decoder=groups-to-roles:add(attribute="groups")

/subsystem=elytron/constant-realm-mapper=local:add(realm-name="local")
/subsystem=elytron/provider-sasl-server-factory=global:add
/subsystem=elytron/mechanism-provider-filtering-sasl-server-factory=elytron:add(sasl-server-factory="global",filters=[{"provider-name" => "WildFlyElytron"}])
/subsystem=elytron/configurable-sasl-server-factory=configured:add(sasl-server-factory="elytron",properties={"wildfly.sasl.local-user.default-user" => "$local"})

/subsystem=elytron/constant-role-mapper=super-user-mapper:add(roles=["SuperUser"])
